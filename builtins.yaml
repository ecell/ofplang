nodes:
  # - id: Group
  - id: AsArray
    input:
      - id: in1
        type: Spread[Data]
        expand: True
    output:
      - id: out1
        type: Array[Data]
        expression: Array[first_arg(in1)]
        expand: True
  - id: AsGroup
    input:
      - id: in1
        type: Array[Data]
        expand: True
    output:
      - id: out1
        type: Group[Data]
        expression: Group[first_arg(in1)]
        expand: True
  # - id: GroupObject
  - id: Integer
    output:
      - id: value
        type: Integer
  - id: Float
    output:
      - id: value
        type: Float
  - id: LiquidClass
    output:
      - id: value
        type: LiquidClass
  - id: Full
    input:
      - id: size
        type: Integer
        expand: True
      - id: fill_value
        type: Real
        free: True
        default:
          vaue: 0.0
          type: Float
        expand: True
    output:
      - id: value
        type: Array[Real]
        expression: Array[fill_value]
        expand: True
  - id: Range
    input:
      - id: start
        type: Real
        expand: True
        free: True
        default:
          value: 0
          type: Integer
      - id: stop
        type: Real
        expand: True
      - id: step
        type: Real
        expand: True
        free: True
        default:
          value: 1
          type: Integer
    output:
      - id: value
        type: Array[Real]
        expand: True
        expression: Array[upper(start, stop, step)]
  - id: Linspace
    input:
      - id: start
        type: Real
        expand: True
        free: True
        default:
          value: 0.0
          type: Float
      - id: stop
        type: Real
        expand: True
        default:
          value: 1.0
          type: Float
      - id: num
        type: Integer
        expand: True
    output:
      - id: value
        type: Array[Float]
        expand: True
  - id: RandomUniform
    input:
      - id: low
        type: Real | Array[Real]
        expand: True
        free: True
        default:
          value: 0.0
          type: Float
      - id: high
        type: Real | Array[Real]
        expand: True
        free: True
        default:
          value: 1.0
          type: Float
      - id: size
        type: Integer
        expand: True
    output:
      - id: value
        type: Array[Float]
        expand: True
  - id: Repeat
    input:
      - id: a
        type: Array
        expand: True
      - id: repeats
        type: Integer
        expand: True
    output:
      - id: value
        type: Array
        expand: True
        expression: a
  - id: Tile
    input:
      - id: a
        type: Array
        expand: True
      - id: reps
        type: Integer
        expand: True
    output:
      - id: value
        type: Array
        expand: True
        expression: a
  - id: Slice
    input:
      - id: a
        type: Array
        expand: True
      - id: start
        type: Integer
        expand: True
        free: True
        default:
          value: None
          type: Nothing
      - id: stop
        expand: True
        free: True
        default:
          value: None
          type: Nothing
      - id: step
        expand: True
        free: True
        default:
          value: None
          type: Nothing
    output:
      - id: value
        type: Array
        expression: a
        expand: True
  - id: Pad
    input:
      - id: a
        type: Array[Real]
        expand: True
      - id: before
        type: Integer
        expand: True
        free: True
        default:
          value: 0
          type: Integer
      - id: after
        type: Integer
        expand: True
        free: True
        default:
          value: 0
          type: Integer
      - id: fill_value
        type: Real
        expand: True
        free: True
        default:
          value: 0.0
          type: Float
    output:
      - id: value
        type: Array[Real]
        expression: a
        expand: True
  - id: Sum
    input:
      - id: a
        type: Array[Real]
        expand: True
    output:
      - id: value
        type: Real
        expression: first_arg(a)
        expand: True
  - id: Length
    input:
      - id: a
        type: Array[Real]
        expand: True
    output:
      - id: value
        type: Integer
        expand: True
  - id: Add
    input:
      - id: a
        type: Array[Real] | Real
        expand: True
      - id: b
        type: Array[Real] | Real
        expand: True
    output:
      - id: value
        type: Array[Real] | Real
        expression: upper(a, b)
        expand: True
  - id: Sub
    input:
      - id: a
        type: Array[Real] | Real
        expand: True
      - id: b
        type: Array[Real] | Real
        expand: True
    output:
      - id: value
        type: Array[Real] | Real
        expression: upper(a, b)
        expand: True
  - id: Mul
    input:
      - id: a
        type: Array[Real] | Real
        expand: True
      - id: b
        type: Array[Real] | Real
        expand: True
    output:
      - id: value
        type: Array[Real] | Real
        expression: upper(a, b)
        expand: True
  - id: Display
    input:
      - id: in1
        type: Any[Data]
  - id: Scatter
    input:
      - id: scale
        type: Float
        free: True
        default:
          value: 0.25
          type: Float
      - id: x
        type: Array
        expand: True
      - id: y
        type: Array
        expand: True
  - id: Inspect
    input:
      - id: in1
        type: Any[Object]
        expand: True
        optional: True
    output:
      - id: out1
        type: Any[Object]
        expand: True
        optional: True
        expression: in1
  - id: Switch
    input:
      - id: in1
        type: Any[Data]
      - id: in2
        type: Any[Data]
      - id: cond
        type: Boolean
        expand: True
    output:
      - id: value
        type: Any[Data]
        expand: True
        expression: in1
    check:
      - in1 == in2
  - id: Boolean
    output:
      - id: out
        type: Boolean
  - id: LogicalNot
    input:
      - id: in1
        type: Boolean
        expand: True
    output:
      - id: out1
        type: Boolean
        expand: True
  - id: Just
    input:
      - id: in1
        type: Object
        expand: True
        optional: True
    output:
      - id: out1
        type: Optional[Object]
        expression: Optional[in1]
        expand: True
  - id: Merge
    input:
      - id: in1
        type: Optional[Object]
        expand: True
      - id: in2
        type: Optional[Object]
        expand: True
    output:
      - id: out1
        type: Object
        expand: True
        expression: first_arg(in1)
    check:
      - in1 == in2
  - id: Branch
    input:
      - id: in1
        type: Any[Object]
        expand: True
        optional: True
      - id: cond
        expand: True
    output:
      - id: out1
        type: Optional[Any[Object]]
        expand: True
        expression: Optional[in1]
      - id: out2
        type: Optional[Any[Object]]
        expand: True
        expression: Optional[in1]
  - id: Client
    input:
      - id: in1
        type: Any[Object]
        optional: True
      - id: address
        type: String
        free: True
        default:
          value: default
          type: String
    output:
      - id: remote
        type: Any[Object]
        optional: True
        expression: in1
        io: True
  - id: Server
    input:
      - id: remote
        type: Any[Object]
        io: True
      - id: address
        type: String
        free: True
        default:
          value: default
          type: String
    output:
      - id: out1
        type: Any[Object]
        expression: remote
  # - id: Pack
  # - id: Unpack